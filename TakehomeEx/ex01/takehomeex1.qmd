---
title: "Take Home Ex 1"

author: "Cheng Chun Chieh"

date: "15 Apr 2024"
date-modified: "last-modified"

format: html

execute: 
  echo: true
  eval: true
  warning: false
  freeze: true
  
editor: visual
---

# Take Home Ex 1

***Creating data visualisation beyond default***

# 1 Data Preparation

## 1.1 Loading the Required Packages

```{r}
pacman::p_load (tidyverse)
```

## 1.2 Examining and Preparing the Data

We first read the 5 .csv files provided. These are separate csv files containing data of each of the quarters from 2023 to Mar 2024.

As such, we will use the following code chunk to import the data and combine them into a single dataset.

```{r}

df <- list.files(path="data/csv", full.names = TRUE) %>% 
  lapply(read_csv) %>% 
  bind_rows 
```

After combining the dataset into df, we will also extract the Sale Date and code it accordingly to the quarters. E.g. Jan to Mar 23 will be Q1Y23 and so on.

```{r}
df <- df %>%
  mutate(sale_date = as.Date(`Sale Date`, format = "%d %b %Y"),  
         quarter = paste0("Q", quarter(sale_date), "Y", format(sale_date, "%y")))%>%
  mutate(
    quarter = factor(quarter, levels = c("Q1Y23", "Q2Y23", "Q3Y23", "Q4Y23", "Q1Y24"))
  )
```

I also like to rename some of the columns headers so that it is easier to type into the codes later, especially removing the space in between.

```{r}

realis2324 <- df %>% 
  rename(
    unit_psm = 'Unit Price ($ PSM)',
    unit_area = 'Area (SQM)',
    property_type = `Property Type`,
    sale_type = `Type of Sale`,
    planning_region = `Planning Region`,
    planning_area = `Planning Area`,
    trans_price = `Transacted Price ($)`
      )
```

## 1.3 Check Data for Duplicated, Missing Values

First, we check if there are any missing values in the dataset.

```{r}
# Check for missing values
missing_values <- realis2324 %>%
  summarise_all(~ sum(is.na(.)))

# Display columns with missing values
print(missing_values)
```

And also for any duplicated values.

```{r}
# Check for duplicate rows
duplicate_rows <- realis2324 %>%
  filter(duplicated(.))

# Display duplicate rows
print(duplicate_rows)
```

Because we are looking at transaction data of the properties, we also want to check the number of units sold in each row is equal to 1. Because any sales with more than 1 unit can indicate other sales types, like en-bloc etc.

```{r}
all_units_equal_to_1 <- all(realis2324$`Number of Units` == 1)

if (all_units_equal_to_1) {
  print("All values in the 'Number of Units' column are equal to 1.")
} else {
  # Print values above 1
  units_above_1 <- realis2324 %>%
    filter(`Number of Units` > 1)

  print("Values in the 'Number of Units' column above 1:")
  print(units_above_1)
}
```

We have 12 rows with the number of units \> 1. Given that we are not able to divide the sales data accordingly by the number of units etc, we will remove these data instead.

```{r}
realis2324_cleaned <- realis2324 %>%
  filter(`Number of Units` <= 1)
```

## 1.4 Reviewing the Property Type

When we look at the data, we can see that there are five property types indicated:

1.  Apartment

2.  Condominium

3.  Detached House

4.  Executive Condominium

5.  Semi-Detached House

6.  Terrace House

Executive Condominium is a mix between public and private housing so we will leave it as such in case we want to exclude it from further analysis. However, when we look at Apartment and Condominium, we realised that there is not much difference; e.g. one of the Apartment is [Lentor Modern](https://www.lentorsmodern.com.sg/) which is actually listed as a Condominium on its website. For the purpose of our study, we can there combine apartment and condominium as one same group - condo.

## 1.x Writing the data to rds file

We will then write the data into a rds format.

```{r}
write_rds(realis2324_cleaned, "data/rds/realis2324_cleaned.rds")
```

# 2 Data Visualisation

Reading the file from rds.

```{r}
realis2324_cleaned <- read_rds ("data/rds/realis2324_cleaned.rds")
```

What are we interested in?

-   number of transactions by sales types for condos - proportion of new sales or sales prices of new sales - vs resale

-   are more ppl looking for bigger size condo?

-   \% increase of prices by planning regions

```{r}
ggplot(data = realis2324_cleaned, aes(x = quarter, fill = property_type)) +
  geom_bar(position = "dodge", color = "black") +
  theme_light() +
  labs(
    title = "Number of Transactions by Property Types Across Quarters",
    x = "Quarters",
    y = "Number of Transactions"
  ) +
  scale_fill_brewer(palette = "Set3")  # Adjust the color palette if needed
```

```{r}
ggplot(data=realis2324_cleaned, 
       aes(x= trans_price)) +
  geom_histogram(bins=50) +
  xlim (0, 5000000) +
  facet_wrap(~ quarter) +
  labs(title="Histogram of Transacted Price across Quarters (up to $5M)", y="Count", x="Transacted Price ($)")+
  theme_minimal() +
  theme(axis.text.x = element_text(size = 6))
```

```{r}
ggplot(data=realis2324_cleaned, 
       aes(y = trans_price, x= quarter)) +
  ylim(0,5000000) +
  geom_boxplot(colour ="black", fill="#88abff", alpha=0.5) +
  geom_point(stat="summary",        
             fun=mean,           
             colour ="darkblue",          
             size=2) +
  theme_light() +
  labs(title="Transaction Price across Quarters", y="Transacted Price", x="Quarters")
```
