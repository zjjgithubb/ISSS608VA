{
  "hash": "293eac14d5602204da0f7aa35d5a1fd6",
  "result": {
    "markdown": "---\ntitle: \"Take Home Ex 1\"\n\nauthor: \"Cheng Chun Chieh\"\n\ndate: \"15 Apr 2024\"\ndate-modified: \"last-modified\"\n\nformat: html\n\nexecute: \n  echo: true\n  eval: true\n  warning: false\n  freeze: true\n  \neditor: visual\n---\n\n\n# Take Home Ex 1\n\n***Creating data visualisation beyond default***\n\n## **The Task**\n\nAssuming the role of a graphical editor of a median company, you are requested to prepare minimum two and maximum three data visualisation to reveal the private residential market and sub-markets of Singapore for the 1st quarter of 2024.\n\n# 1 Data Preparation\n\n## 1.1 Loading the Required Packages\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(plotly, patchwork, hrbrthemes, ggrepel, tidyverse, ggpubr, scales)\n```\n:::\n\n\n## 1.2 Examining and Preparing the Data\n\nWe first read the 5 .csv files provided. These are separate csv files containing data of each of the quarters from 2023 to Mar 2024.\n\nAs such, we will use the following code chunk to import the data and combine them into a single dataset.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf <- list.files(path=\"data/csv\", full.names = TRUE) %>% \n  lapply(read_csv) %>% \n  bind_rows \n```\n:::\n\n\nAfter combining the dataset into df, we will also extract the Sale Date and code it accordingly to the quarters. E.g. Jan to Mar 23 will be Q1Y23 and so on.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf <- df %>%\n  mutate(sale_date = as.Date(`Sale Date`, format = \"%d %b %Y\"),  \n         quarter = paste0(\"Q\", quarter(sale_date), \"Y\", format(sale_date, \"%y\")))%>%\n  mutate(\n    quarter = factor(quarter, levels = c(\"Q1Y23\", \"Q2Y23\", \"Q3Y23\", \"Q4Y23\", \"Q1Y24\"))\n  )\n```\n:::\n\n\nI also like to rename some of the columns headers so that it is easier to type into the codes later, especially removing the space in between.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrealis2324 <- df %>% \n  rename(\n    unit_psm = 'Unit Price ($ PSM)',\n    unit_area = 'Area (SQM)',\n    property_type = `Property Type`,\n    sale_type = `Type of Sale`,\n    planning_region = `Planning Region`,\n    planning_area = `Planning Area`,\n    trans_price = `Transacted Price ($)`\n      )\n```\n:::\n\n\n## 1.3 Check Data for Duplicated, Missing Values\n\nFirst, we check if there are any missing values in the dataset.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Check for missing values\nmissing_values <- realis2324 %>%\n  summarise_all(~ sum(is.na(.)))\n\n# Display columns with missing values\nprint(missing_values)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 23\n  `Project Name` trans_price `Area (SQFT)` `Unit Price ($ PSF)` `Sale Date`\n           <int>       <int>         <int>                <int>       <int>\n1              0           0             0                    0           0\n# ℹ 18 more variables: Address <int>, sale_type <int>, `Type of Area` <int>,\n#   unit_area <int>, unit_psm <int>, `Nett Price($)` <int>,\n#   property_type <int>, `Number of Units` <int>, Tenure <int>,\n#   `Completion Date` <int>, `Purchaser Address Indicator` <int>,\n#   `Postal Code` <int>, `Postal District` <int>, `Postal Sector` <int>,\n#   planning_region <int>, planning_area <int>, sale_date <int>, quarter <int>\n```\n:::\n:::\n\n\nAnd also for any duplicated values.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Check for duplicate rows\nduplicate_rows <- realis2324 %>%\n  filter(duplicated(.))\n\n# Display duplicate rows\nprint(duplicate_rows)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 0 × 23\n# ℹ 23 variables: Project Name <chr>, trans_price <dbl>, Area (SQFT) <dbl>,\n#   Unit Price ($ PSF) <dbl>, Sale Date <chr>, Address <chr>, sale_type <chr>,\n#   Type of Area <chr>, unit_area <dbl>, unit_psm <dbl>, Nett Price($) <chr>,\n#   property_type <chr>, Number of Units <dbl>, Tenure <chr>,\n#   Completion Date <chr>, Purchaser Address Indicator <chr>,\n#   Postal Code <chr>, Postal District <chr>, Postal Sector <chr>,\n#   planning_region <chr>, planning_area <chr>, sale_date <date>, …\n```\n:::\n:::\n\n\nBecause we are looking at transaction data of the properties, we also want to check the number of units sold in each row is equal to 1. Because any sales with more than 1 unit can indicate other sales types, like en-bloc etc.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nall_units_equal_to_1 <- all(realis2324$`Number of Units` == 1)\n\nif (all_units_equal_to_1) {\n  print(\"All values in the 'Number of Units' column are equal to 1.\")\n} else {\n  # Print values above 1\n  units_above_1 <- realis2324 %>%\n    filter(`Number of Units` > 1)\n\n  print(\"Values in the 'Number of Units' column above 1:\")\n  print(units_above_1)\n}\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Values in the 'Number of Units' column above 1:\"\n# A tibble: 12 × 23\n   `Project Name`     trans_price `Area (SQFT)` `Unit Price ($ PSF)` `Sale Date`\n   <chr>                    <dbl>         <dbl>                <dbl> <chr>      \n 1 N.A.                  32200000        14123.                 2280 02 May 2023\n 2 KEW LODGE             66800000        25177                  2653 23 May 2023\n 3 N.A.                   6150000         4342.                 1416 19 Jun 2023\n 4 N.A.                  10600000         6747.                 1571 26 Jun 2023\n 5 CLAYMORE PLAZA         7000000         4209.                 1663 27 Feb 2024\n 6 BAGNALL COURT        115280000        68491.                 1683 04 Jan 2023\n 7 MONDO MANSION BUI…     6280000         5490.                 1144 18 Jan 2023\n 8 MEYER PARK           392180000       144883.                 2707 09 Feb 2023\n 9 N.A.                  61080008        32149.                 1900 21 Mar 2023\n10 EAST VIEW GARDEN       6100000         8338.                  732 17 Jul 2023\n11 N.A.                   8000000         3659.                 2187 28 Jul 2023\n12 KARTAR APARTMENTS     18000000         6964.                 2585 11 Oct 2023\n# ℹ 18 more variables: Address <chr>, sale_type <chr>, `Type of Area` <chr>,\n#   unit_area <dbl>, unit_psm <dbl>, `Nett Price($)` <chr>,\n#   property_type <chr>, `Number of Units` <dbl>, Tenure <chr>,\n#   `Completion Date` <chr>, `Purchaser Address Indicator` <chr>,\n#   `Postal Code` <chr>, `Postal District` <chr>, `Postal Sector` <chr>,\n#   planning_region <chr>, planning_area <chr>, sale_date <date>, quarter <fct>\n```\n:::\n:::\n\n\nWe have 12 rows with the number of units \\> 1. Given that we are not able to divide the sales data accordingly by the number of units etc, we will remove these data instead.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrealis2324_cleaned <- realis2324 %>%\n  filter(`Number of Units` <= 1)\n```\n:::\n\n\n## 1.4 Reviewing the Property Type\n\nWhen we look at the data, we can see that there are five property types indicated:\n\n1.  Apartment\n\n2.  Condominium\n\n3.  Detached House\n\n4.  Executive Condominium\n\n5.  Semi-Detached House\n\n6.  Terrace House\n\nExecutive Condominium is a mix between public and private housing so we will leave it as such in case we want to exclude it from further analysis. However, when we look at Apartment and Condominium, we realised that there is not much difference; e.g. one of the Apartment is [Lentor Modern](https://www.lentorsmodern.com.sg/) which is actually listed as a Condominium on its website. For the purpose of our study, we can therefore combine apartment and condominium as one same group - condo.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrealis2324_cleaned$property_type <- ifelse(realis2324_cleaned$property_type == \"Apartment\", \"Condominium\", realis2324_cleaned$property_type)\n\nrealis2324_cleaned <- realis2324_cleaned %>%\n  mutate(\n    property_type = factor(property_type, levels = c(\"Condominium\", \"Executive Condominium\", \"Terrace House\", \"Semi-Detached House\", \"Detached House\"))\n  )\n```\n:::\n\n\n## 1.5 Writing the data to rds file\n\nWe will then write the data into a rds format.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_rds(realis2324_cleaned, \"data/rds/realis2324_cleaned.rds\")\n```\n:::\n\n\n# 2 Data Visualisation\n\nReading the file from rds.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrealis2324_cleaned <- read_rds (\"data/rds/realis2324_cleaned.rds\")\n```\n:::\n\n\n## 2.1 Overview of the Private Property Transactions in Q1Y24\n\nWe will first start by providing an overview of the private property transactions in the Quarter 1 2024, by trying to answer the following questions:\n\n-   What is the proportion of sales in terms of property type across the quarters? We know that the bulk of transactions would involve Condominiums given their availability as compared to landed properties, but we also want to know the difference between resales/sub-sale as compared to new sales.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\ng1 <- ggplot(subset(realis2324_cleaned, sale_type %in% c(\"Resale\", \"Sub Sale\")), aes(x = quarter, fill = property_type)) +\n  geom_bar(position = \"dodge\", color = \"black\") +\n  geom_text(\n    aes(label = ..count.., y = ..count.. + 50 ),\n    stat = \"count\",\n    size = 2,\n    position = position_dodge(0.9),\n    vjust=0)+\n  theme(legend.position=\"none\")+\n   labs(\n    title = \"Resale Transactions for Condos in Q1Y24 is comparable to Q1Y23\",\n    x = \"Quarters\",\n    y = \"Number of Transactions\"\n  ) +\n  scale_fill_brewer(palette = \"Blues\", name = \"Property Type\") \n\ng1\n```\n\n::: {.cell-output-display}\n![](takehomeex1_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\ng2 <- ggplot(subset(realis2324_cleaned, sale_type %in% \"New Sale\"), aes(x = quarter, fill = property_type)) +\n  geom_bar(position = \"dodge\", color = \"black\") +\n  geom_text(\n    aes(label = ..count.., y = ..count.. + 50 ),\n    stat = \"count\",\n    size = 2,\n    position = position_dodge(0.9),\n    vjust=0)+\n  labs(\n    title = \"New Sale Transactions for Condos in Q1Y24 is comparable to Q1Y23\",\n    x = \"Quarters\",\n    y = \"Number of Transactions\"\n  ) +\n  scale_fill_brewer(palette = \"Blues\", name = \"Property Type\") \n\ng2\n```\n\n::: {.cell-output-display}\n![](takehomeex1_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\np = (g1 / g2) +\n  plot_annotation('Number of Condo Transactions for Q1Y24 is comparable to Q1Y23')\n\np & theme_minimal()+\n  theme(legend.key.size = unit(0.3, 'cm'), #change legend key size\n        legend.key.height = unit(0.3, 'cm'), #change legend key height\n        legend.key.width = unit(0.3, 'cm'), #change legend key width\n        legend.title = element_text(size=6), #change legend title font size\n        legend.text = element_text(size=6),\n        title=element_text(size=8, face='bold'), \n        axis.text.x = element_text(size = 6),\n        axis.text.y = element_text(size = 8),\n        )\n```\n\n::: {.cell-output-display}\n![](takehomeex1_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n\n::: callout-important\nFrom the graph, we can see that the number of transactions for condominiums is a lot higher as compared to landed properties, with the number of both resale and new sales in Q1Y24 comparable to that in Q1Y23.\n\nThere are a higher number of new sales in Q2 and Q3 of the year, which is probably explained by the period when the developers like to launch their sales. We can also see that the new sales of landed properties pale in comparison to that of condominiums.\n:::\n\n## 2.2 Transaction Price on Resale Condos\n\nNext, we ask the following questions about the resale prices of condos:\n\n-   Has the overall transaction price of properties, **focusing on resale Condominiums** increased across the quarter, and year on year comparison for Q1Y24 as compared to Q1Y23?\n\nFirst we look at the data in 2023 and compute some statistical values.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncondo_subset23 <- realis2324_cleaned %>%\n  filter(sale_type %in% c(\"Resale\", \"Sub Sale\"), \n         property_type == \"Condominium\",\n         quarter %in% c(\"Q1Y23\", \"Q2Y23\", \"Q3Y23\", \"Q4Y23\") )\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nresale23_mean <- round(mean(condo_subset23$trans_price))\nresale23_median <- round(median(condo_subset23$trans_price))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncondo_subset24 <- realis2324_cleaned %>%\n  filter(sale_type %in% c(\"Resale\", \"Sub Sale\"), \n         property_type == \"Condominium\",\n         quarter %in% c(\"Q1Y24\") )\n\nresale24_mean <- round(mean(condo_subset24$trans_price))\nresale24_median <- round(median(condo_subset24$trans_price))\n\nymax <- as.numeric(round((IQR(condo_subset24$trans_price)*1.5) +\n                quantile(condo_subset24$trans_price,0.75)))\nymin <- as.integer(min(condo_subset24$trans_price))\n```\n:::\n\n\nNext, we plot the histogram and box plots of the transaction prices of the resale condos (including those sub set sales), up to a limit of \\$5 million.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nh_price <- ggplot(data= condo_subset24, aes(x= trans_price)) +\n  geom_histogram(bins=30) +\n  geom_vline(aes(xintercept = resale23_mean), col=\"darkgrey\", linewidth=0.5, linetype = \"dashed\") +\n  annotate(\"text\", x=2500000, y=360, label=\"Mean Price in 2023:\", \n           size=3, color=\"darkgrey\") +\n  annotate(\"text\", x=2500000, y=330, label=format(resale23_mean, big.mark = \",\"),\n           size=3, color=\"darkgrey\") +\n  geom_vline(aes(xintercept = resale23_median), col=\"darkgrey\", linewidth=0.5, linetype = \"dashed\") +\n  annotate(\"text\", x=900000, y=360, label=\"Median Price in 2023\", \n           size=3, color=\"darkgrey\") +\n  annotate(\"text\", x=900000, y=330, label=format(resale23_median, big.mark = \",\"),\n           size=3, color=\"darkgrey\") +\n  geom_vline(aes(xintercept = resale24_median), col=\"darkblue\", linewidth=0.5, linetype = \"dashed\") +\n  annotate(\"text\", x=900000, y=300, label=\"Median Price in Q1Y24\", \n           size=3, color=\"darkblue\") +\n  annotate(\"text\", x=900000, y=270, label=format(resale24_median, big.mark = \",\"),\n           size=3, color=\"darkblue\")+\n    geom_vline(aes(xintercept = resale24_mean), col=\"darkblue\", linewidth=0.5, linetype = \"dashed\") +\n  annotate(\"text\", x=2500000, y=300, label=\"Mean Price in Q1Y24\", \n           size=3, color=\"darkblue\") +\n  annotate(\"text\", x=2500000, y=270, label=format(resale24_mean, big.mark = \",\"),\n           size=3, color=\"darkblue\") +\n  scale_x_continuous(limits = c(0,5000000),labels = unit_format(unit = \"M\", scale = 1e-6)) +\n  labs(\n    x = \"Transaction Price\",\n    y = \"Number of Transactions\"\n  )\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nb_price <- ggplot(data = condo_subset24, aes(y = trans_price)) + \n  geom_boxplot(outlier.colour=\"firebrick\", outlier.shape=16,\n               outlier.size=0.6, notch=FALSE, width = 0.25) + \n  coord_flip() + labs(y = \"\", x = \"\") + \n  scale_y_continuous(limits = c(0,5000000), labels = unit_format(unit = \"M\", scale = 1e-6)) +\n  theme(axis.text = element_blank(), axis.ticks = element_blank()) + \n  stat_boxplot(geom=\"errorbar\", width=0.25) + \n  annotate(\"text\", x=0.20, y=ymax, label=format(ymax, big.mark = \",\"), \n           size=3, color=\"lightpink4\") +\n  annotate(\"text\", x=0.20, y=ymin, label=format(ymin, big.mark = \",\"), \n           size=3, color=\"lightpink4\") +\n  annotate(\"text\", x=-0.15, y=3000000, label=format(resale24_median, big.mark = \",\"),\n           size=3, color=\"lightpink4\") +\n  annotate(\"text\", x=-0.15, y=1000000, label=\"Median Price =\",\n           size=3, color=\"lightpink4\")+\n  labs(title=\"Transaction Price in Q1Y24\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\ncondo_subset2324 <- realis2324_cleaned %>%\n  filter(sale_type %in% c(\"Resale\", \"Sub Sale\"), \n         property_type == \"Condominium\")\n\nbp_price <- ggplot(data=condo_subset2324, \n       aes(y = trans_price, x= quarter)) +\n  geom_boxplot(colour =\"black\", fill=\"#88abff\", alpha=0.5) +\n  geom_hline(aes(yintercept = resale24_median), col=\"darkblue\", linewidth=0.5, linetype = \"dashed\") +\n  geom_point(stat=\"summary\",        \n             fun=mean,           \n             colour =\"darkblue\",          \n             size=2) +\n  scale_y_continuous(limits = c(0,3000000),labels = unit_format(unit = \"M\", scale = 1e-6))+\n  labs(title=\"Transaction Price across Quarters\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nresale_price24 <- (b_price | bp_price) / h_price\n\np1 <- resale_price24 + plot_annotation(title = \"Both Mean and Median Prices of Transactions are higher in Q1Y24 compared to 2023\")\n\np1 & theme_minimal() +\n  theme(title=element_text(size=8, face='bold'), \n        axis.text.x = element_text(size = 6),\n        axis.text.y = element_text(size = 8),\n        axis.title.y = element_blank(),\n        axis.title.x = element_blank(),\n        )\n```\n\n::: {.cell-output-display}\n![](takehomeex1_files/figure-html/unnamed-chunk-21-1.png){width=672}\n:::\n:::\n\n\n::: callout-important\nFrom the graphs, we can observe that both the median and mean prices in Q1Y24 are higher as compared to that of 2023. The distribution of prices is also more right-skewed with the mean prices \\> median prices. When we look across the quarters, there also seem to be a gradual increase in the prices.\n\nWhile the majority of the prices would fall between \\$1M to \\$2.2M, there are also quite a number of properties going for higher prices.\n\nThis is expected given that the transaction prices of properties are dependent on a variety of factors, mainly location, size of the units, age and many more.\n:::\n\n## 2.3 Prices across Planning Regions\n\n\n::: {.cell}\n\n```{.r .cell-code}\nregion_price <- ggplot(data = condo_subset24, aes(x = fct_infreq(planning_region))) +\n  geom_bar(stat = 'count', position = \"dodge\", fill = \"lightblue\") +\n  labs(\n    title = \"Higher number of sales in Central Region\",\n    y = \"Number of Transactions\"\n  ) \n```\n:::\n",
    "supporting": [
      "takehomeex1_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}