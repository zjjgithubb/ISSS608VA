{
  "hash": "444fba036121f77de5658feac66ae7bc",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"In Class Ex 6\"\n\nauthor: \"Cheng Chun Chieh\"\n\ndate: \"18 May 2024\"\ndate-modified: \"last-modified\"\n\nformat: html\nexecute: \n  echo: true\n  eval: true\n  warning: false\n  freeze: true\n  \neditor: visual\n---\n\n\n# Text Analytics using Corporaexplorer\n\n## 1. Getting Started\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(corporaexplorer, tidyverse, stringi, rvest)\n```\n:::\n\n\nUsing the example from the documentation:\n\n<https://kgjerde.github.io/corporaexplorer/articles/bible.html>\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbible <- readr::read_lines(\"http://www.gutenberg.org/cache/epub/10/pg10.txt\")\n```\n:::\n\n\n## 2. Preparing the data\n\nNeed to collapse the data into one string\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbible <- paste(bible, collapse = \"\\n\")\n```\n:::\n\n\nIdentifying the beginning and end of the Bible / stripping PJ metadata \\# (technique borrowed from <https://quanteda.io/articles/pkgdown/replication/digital-humanities.html).>\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstart_v <- stri_locate_first_fixed(bible, \"The First Book of Moses: Called Genesis\")[1]\nend_v <- stri_locate_last_fixed(bible, \"Amen.\")[2]\nbible <- stri_sub(bible, start_v, end_v)\n```\n:::\n\n\nIn the file, every book in the bible is preceded by five newlines, which we use to split our string into a vector where each element is a book.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbooks <- stri_split_regex(bible, \"\\n{5}\") %>%\n    unlist %>%\n    .[-40]  \n\n# Removing the heading \"The New Testament of the King James Bible\",\n# which also was preceded by five newlines.\n```\n:::\n\n\nBecause of the structure of the text in the file: \\# Replacing double or more newlines with two newlines, and a single newline with space.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbooks <- str_replace_all(books, \"\\n{2,}\", \"NEW_PARAGRAPH\") %>%\n    str_replace_all(\"\\n\", \" \") %>%\n    str_replace_all(\"NEW_PARAGRAPH\", \"\\n\\n\")\nbooks <- books[3:68]  # The two first elements are not books\n```\n:::\n\n\nIdentifying new chapters within each book and split the text into chapters. (The first characters in chapter 2 will e.g. be 2:1)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nchapters <- str_replace_all(books, \"(\\\\d+:1 )\", \"NEW_CHAPTER\\\\1\") %>%\n    stri_split_regex(\"NEW_CHAPTER\")\n\n# Removing the chapter headings from the text (we want them as metadata).\nchapters <- lapply(chapters, function(x) x[-1])\n```\n:::\n\n\nWe are not quite happy with the long book titles in the King James Bible, so we retrieve shorter versions from esv.org which will take up less space in the corpus map plot.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbook_titles <- read_html(\"https://www.esv.org/resources/esv-global-study-bible/list-of-abbreviations\") %>%\n  html_nodes(\"td:nth-child(1)\") %>%\n  html_text() %>%\n  .[13:78]  # Removing irrelevant elements after manual inspection.\n\n# We add a column indicating whether a book belongs to the Old or New Testament,\n#   knowing that they contain respectively 39 and 27 books.\ntestament <- c(rep(\"Old\", 39), rep(\"New\", 27))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Data frame with one book as one row.\nbible_df <- tibble::tibble(Text = chapters,\n                           Book = book_titles,\n                           Testament = testament)\n\n# We want each chapter to be one row, but keep the metadata (book and which testament).\n\nbible_df <- tidyr::unnest(bible_df, Text)\n```\n:::\n\n\n## 3. Using corporaexplorer\n\nThe three most important arguments are:\n\n-   `dataset`: a data frame with, as a minimum, a `Text` column. If `date_based_corpus` is `TRUE` (the default), dataset must also contain a column “Date” (of class Date).\n\n-   `date_based_corpus`. Default is `TRUE`. Set to `FALSE` if the corpus is not to be organised according to document dates.\n\n-   `grouping_variable`. If date_based_corpus is TRUE, this argument is ignored. If date_based_corpus is FALSE, this argument can be used to group the documents, e.g. if `dataset` consists of chapters belonging to different books, and the book indicated in a “Book” column, set this argument to `\"Book\"`\n\n::: callout-note\nText column - must be named as Text (with capital T)\n\nDate field - must be in date format that R can read (cannot be 1, 2, 3, 4, 5 etc)\n:::\n\nAs this is a corpus which is not organised by date, we set `date_based_corpus` to `FALSE`. \\# Because we want to organise our exploration around the books in the Bible, we pass `\"Book\"` to the `grouping_variable` argument. We specify which metadata columns we want to be displayed in the \"Document information\" tab, using the `columns_doc_info` argument.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nKJB <- prepare_data(dataset = bible_df,\n                    date_based_corpus = FALSE,\n                    grouping_variable = \"Book\",\n                    columns_doc_info = c(\"Testament\", \"Book\"))\n```\n:::\n\n\nRun corpus explorer:\n\n<https://kgjerde.github.io/corporaexplorer/articles/usage.html>\n\n\n::: {.cell}\n\n```{.r .cell-code}\nclass(KJB)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"corporaexplorerobject\"\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nexplore(KJB)\n```\n\n::: {.cell-output-display}\n`<div style=\"width: 100% ; height: 400px ; text-align: center; box-sizing: border-box; -moz-box-sizing: border-box; -webkit-box-sizing: border-box;\" class=\"muted well\">Shiny applications not supported in static R Markdown documents</div>`{=html}\n:::\n:::\n\n\n## 4. Using textnets\n\n<https://github.com/cbail/textnets>\n\n## 5. Using LDavis\n\n<https://github.com/cpsievert/LDAvis>\n\n# Network Graphs Visualisation\n\n## 1. Loading the Packages\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(jsonlite, tidygraph, ggraph, visNetwork, graphlayouts, ggforce, skimr, tidytext, tidyverse)\n```\n:::\n\n\n## 2. Importing the data\n\nHere, we are using the data from VAST Challenge in 2023.\n\n<https://vast-challenge.github.io/2023/MC3.html>\n\nFor our data - we need to rename the columns that we want to have a **source** and **target** under links.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmc3_data <- fromJSON (\"data/MC3.json\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nclass(mc3_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"list\"\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmc3_edges <-\n  as_tibble(mc3_data$links) %>%\n  distinct() %>%\n  mutate(source = as.character(source),\n         target = as.character(target),\n         type = as.character(type)) %>%\n  group_by(source,target, type) %>%\n  summarise(weights=n()) %>%\n  filter(source!=target) %>%\n  ungroup()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmc3_nodes <-\n  as_tibble(mc3_data$nodes) %>%\n  distinct() %>%\n  mutate(id = as.character(id),\n         country = as.character(country),\n         type = as.character(type),\n         product_services = as.character(product_services),\n         revenue_omu = as.numeric(as.character(revenue_omu))) %>%\n  select(id, country, type, revenue_omu, product_services)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nid1 <- mc3_edges %>%\n  select(source) %>%\n  rename(id = source)\n\nid2 <- mc3_edges %>%\n  select(target) %>%\n  rename (id=target)\n\nmc3_nodes1 <- rbind(id1,id2) %>%\n  distinct() %>%\n  left_join(mc3_nodes,\n            by =join_by(id),\n            unmatched = \"drop\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmc3_graph <- tbl_graph (nodes = mc3_nodes1,\n                        edges = mc3_edges,\n                        directed = FALSE) %>%\n  mutate (betweeness_centrality = centrality_betweenness(),\n          closeness_centrality = centrality_closeness()\n)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmc3_graph %>%\n  filter(betweeness_centrality >= 300000) %>%\nggraph(layout = \"fr\") +\n  geom_edge_link (aes(alpha=0.5)) +\n  geom_node_point( aes(\n    size = betweeness_centrality,\n    colors = \"lightblue\",\n    alpha = 0.5  )) +\n  scale_size_continuous(range=c(1,10)) +\n  theme_graph()\n```\n\n::: {.cell-output-display}\n![](inclassex6_files/figure-html/unnamed-chunk-20-1.png){width=672}\n:::\n:::\n\n\n# References\n\n<https://neo4j.com/>\n\n-   More professional software for network graphs - especially if we are handling large networks\n\n<https://gephi.org/features/>\n\n-   Free software for network visualisation\n",
    "supporting": [
      "inclassex6_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}