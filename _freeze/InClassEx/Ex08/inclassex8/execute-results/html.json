{
  "hash": "d4d7dde9bea2e4d11b068925dab1cb7f",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"In Class Ex - Geospatial\"\n\nauthor: \"Cheng Chun Chieh\"\n\ndate: \"8 Jun 2024\"\ndate-modified: \"last-modified\"\n\nformat: html\nexecute: \n  echo: true\n  eval: true\n  warning: false\n  freeze: true\n \neditor: visual\n---\n\n\n# 1. Using Tableau\n\n## 1.1 Using Realis 2023 Data \n\nPrepare the data using Tableau - using the drag and drop function to union the various datasets\n\n![](images/clipboard-639216314.png)\n\nMay have issues - sometimes adjust the number of rows to overcome the issue of 0 rows.\n\n![](images/clipboard-1639856077.png)\n\nTableau can auto detect the postal code and set as zipcode/postcode geographical data.\n\nDrag and drop the postal code into the center:\n\n![There can be unknown postal code - as the SLA records are real -time and some postal codes could have been deleted. Will need to download the postal code and search via Google (they maintain the historical data).](images/clipboard-3434141215.png)\n\n## 1.2 Looking at the median price etc \n\n![](images/clipboard-3710222943.png)\n\nInclude filters to the map:\n\n## 1.3. Chloropleth Maps \n\nTableau can auto-recognise the planning areas - but may not be 100% correct.\n\nRight click and select Geographical Role -\\> Province / State.\n\n![](images/clipboard-1531611624.png)\n\n## 1.4 Creating the Dashboard\n\n![](images/clipboard-389948112.png)\n\n<https://public.tableau.com/app/profile/chun.chieh.cheng/viz/PropertyExplorer_17178269666590/Dashboard1?publish=yes>\n\n## \n\n# 2. Deploying of Shiny Apps\n\nInstall rsconnect package\n\nSign up account at shinyapps.io\n\nFollow steps to connect the rsconnect to the project.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(rsconnect)\n\nrsconnect::deployApp('prototype02/')\n```\n:::\n\n\nOr click through the Publish button after you run the app in Rstudio.\n\nThe apps will be published:\n\nÂ <https://zjjgithub.shinyapps.io/prototype02/>\n\nThe data has to go together with the deployment.\n\nPackages must be available through RCRAN - otherwise cannot use!\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}